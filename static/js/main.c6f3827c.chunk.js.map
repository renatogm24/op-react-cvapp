{"version":3,"sources":["components/Field.js","components/Elements.js","components/SectionInscription.js","components/SectionDescription.js","App.js","index.js"],"names":["Field","capitalizeFirstLetter","stringValue","charAt","toUpperCase","slice","this","props","field","element","handleChange","edit","className","htmlFor","name","defaultValue","type","id","onChange","value","Component","Elements","elements","sectionName","onDeleteElement","onEditElement","onSubmitChanges","fields","length","map","onEdit","onClick","e","icon","faCheck","lastname","email","number","address","faEdit","faTrash","Object","keys","key","SectionInscription","onAddElement","setState","addNew","onSubmitElement","preventDefault","state","concat","reduce","elem","uniqid","elementsArrayCopy","index","elemaux","target","closest","querySelector","elementToDelete","bind","expanded","onExpandButton","preview","faMailBulk","faPhone","career","institution","start","end","position","company","faChevronUp","faPlus","faChevronDown","SectionDescription","App","sectionByType","section","sectionsArrayCopy","sections","onPreviewButton","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6f3827c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Field extends Component {\r\n  capitalizeFirstLetter = (stringValue) => {\r\n    const result = stringValue.charAt(0).toUpperCase() + stringValue.slice(1);\r\n    return result;\r\n  };\r\n\r\n  render() {\r\n    const { field, element, handleChange, edit } = this.props;\r\n    if (edit) {\r\n      return (\r\n        <div className=\"field\">\r\n          <label htmlFor={\"element\" + field.name}>\r\n            {\" \"}\r\n            {this.capitalizeFirstLetter(field.name)}:{\" \"}\r\n          </label>\r\n          <input\r\n            defaultValue={element[field.name]}\r\n            name={field.name}\r\n            type={field.type}\r\n            id={\"element\" + field.name}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"field\">\r\n          <label htmlFor={\"element\" + field.name}>\r\n            {\" \"}\r\n            {this.capitalizeFirstLetter(field.name)}:{\" \"}\r\n          </label>\r\n          <input\r\n            onChange={handleChange}\r\n            value={element[field.name]}\r\n            name={field.name}\r\n            type={field.type}\r\n            id={\"element\" + field.name}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Field;\r\n","import { faEdit, faTrash, faCheck } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { Component } from \"react\";\r\nimport Field from \"./Field\";\r\n\r\nclass Elements extends Component {\r\n  render() {\r\n    const {\r\n      elements,\r\n      sectionName,\r\n      onDeleteElement,\r\n      onEditElement,\r\n      onSubmitChanges,\r\n      fields,\r\n    } = this.props;\r\n    if (elements.length > 0) {\r\n      switch (sectionName) {\r\n        case \"Personal Info\":\r\n          return elements.map((element) => {\r\n            if (element.onEdit) {\r\n              return (\r\n                <form className=\"formElement\">\r\n                  {fields.map((field) => {\r\n                    if (field.name !== \"id\" && field.name !== \"onEdit\") {\r\n                      return (\r\n                        <div key={field.name}>\r\n                          <Field\r\n                            field={field}\r\n                            handleChange={this.handleChange}\r\n                            element={element}\r\n                            edit={true}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return null;\r\n                    }\r\n                  })}\r\n                  <button\r\n                    onClick={(e) => onSubmitChanges(element.id, e)}\r\n                    className=\"onSubmitElement\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faCheck} />\r\n                    <div>Update</div>\r\n                  </button>\r\n                </form>\r\n              );\r\n            } else {\r\n              return (\r\n                <div key={element.id} className=\"elementPersonal\">\r\n                  <div className=\"elementData\">\r\n                    <div>{element.name + \" \" + element.lastname}</div>\r\n                    <div>{element.email}</div>\r\n                    <div>{element.number}</div>\r\n                    <div>{element.address}</div>\r\n                  </div>\r\n                  <div className=\"elementActions\">\r\n                    <button onClick={(e) => onEditElement(element.id, e)}>\r\n                      <FontAwesomeIcon icon={faEdit} />\r\n                    </button>\r\n                    <button onClick={(e) => onDeleteElement(element.id, e)}>\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          });\r\n\r\n        default:\r\n          return elements.map((element) => {\r\n            if (element.onEdit) {\r\n              return (\r\n                <form className=\"formElement\">\r\n                  {fields.map((field) => {\r\n                    if (field.name !== \"id\" && field.name !== \"onEdit\") {\r\n                      return (\r\n                        <div key={field.name}>\r\n                          <Field\r\n                            field={field}\r\n                            handleChange={this.handleChange}\r\n                            element={element}\r\n                            edit={true}\r\n                          />\r\n                        </div>\r\n                      );\r\n                    } else {\r\n                      return null;\r\n                    }\r\n                  })}\r\n                  <button\r\n                    onClick={(e) => onSubmitChanges(element.id, e)}\r\n                    className=\"onSubmitElement\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faCheck} />\r\n                    <div>Update</div>\r\n                  </button>\r\n                </form>\r\n              );\r\n            } else {\r\n              return (\r\n                <div key={element.id} className=\"elementPersonal\">\r\n                  <div className=\"elementData\">\r\n                    {Object.keys(element).map((key) => {\r\n                      if (key !== \"id\") {\r\n                        return <div key={key}>{element[key]}</div>;\r\n                      } else {\r\n                        return null;\r\n                      }\r\n                    })}\r\n                  </div>\r\n                  <div className=\"elementActions\">\r\n                    <button onClick={(e) => onEditElement(element.id, e)}>\r\n                      <FontAwesomeIcon icon={faEdit} />\r\n                    </button>\r\n                    <button onClick={(e) => onDeleteElement(element.id, e)}>\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            }\r\n          });\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Elements;\r\n","import React, { Component } from \"react\";\r\nimport Elements from \"./Elements\";\r\nimport Field from \"./Field\";\r\nimport {\r\n  faCheck,\r\n  faChevronDown,\r\n  faChevronUp,\r\n  faMailBulk,\r\n  faPhone,\r\n  faPlus,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport uniqid from \"uniqid\";\r\n\r\nclass SectionInscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      elements: [],\r\n      element: this.props.fields.reduce((elem, field) => {\r\n        if (field.name === \"id\") {\r\n          elem.id = uniqid();\r\n        } else if (field.name === \"onEdit\") {\r\n          elem.onEdit = false;\r\n        } else {\r\n          elem[field.name] = \"\";\r\n        }\r\n        return elem;\r\n      }, {}),\r\n      addNew: false,\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.onDeleteElement = this.onDeleteElement.bind(this);\r\n    this.onEditElement = this.onEditElement.bind(this);\r\n    this.onSubmitChanges = this.onSubmitChanges.bind(this);\r\n  }\r\n\r\n  onAddElement = () => {\r\n    this.setState({\r\n      addNew: true,\r\n    });\r\n  };\r\n\r\n  onSubmitElement = (e) => {\r\n    e.preventDefault();\r\n    this.setState({\r\n      elements: this.state.elements.concat(this.state.element),\r\n      element: this.props.fields.reduce((elem, field) => {\r\n        if (field.name === \"id\") {\r\n          elem.id = uniqid();\r\n        } else {\r\n          elem[field.name] = \"\";\r\n        }\r\n        return elem;\r\n      }, {}),\r\n      addNew: false,\r\n    });\r\n  };\r\n\r\n  onSubmitChanges = (id, e) => {\r\n    e.preventDefault();\r\n    const elementsArrayCopy = [...this.state.elements];\r\n\r\n    for (let index = 0; index < elementsArrayCopy.length; index++) {\r\n      const element = elementsArrayCopy[index];\r\n      if (element.id === id) {\r\n        this.props.fields.reduce((elemaux, field) => {\r\n          if (field.name !== \"id\" && field.name !== \"onEdit\") {\r\n            elemaux[field.name] = e.target\r\n              .closest(\"form\")\r\n              .querySelector(\"#element\" + field.name).value;\r\n          }\r\n          return elemaux;\r\n        }, element);\r\n        element.onEdit = false;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      elements: elementsArrayCopy,\r\n    });\r\n  };\r\n\r\n  onDeleteElement = (id, e) => {\r\n    const elementsArrayCopy = [...this.state.elements];\r\n    let elementToDelete;\r\n    for (let index = 0; index < elementsArrayCopy.length; index++) {\r\n      const element = elementsArrayCopy[index];\r\n      if (element.id === id) {\r\n        elementToDelete = index;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      elements: [\r\n        ...this.state.elements.slice(0, elementToDelete),\r\n        ...this.state.elements.slice(elementToDelete + 1),\r\n      ],\r\n    });\r\n  };\r\n\r\n  onEditElement = (id, e) => {\r\n    const elementsArrayCopy = [...this.state.elements];\r\n    for (let index = 0; index < elementsArrayCopy.length; index++) {\r\n      const element = elementsArrayCopy[index];\r\n      if (element.id === id) {\r\n        element.onEdit = true;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      elements: elementsArrayCopy,\r\n    });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({\r\n      element: {\r\n        ...this.state.element,\r\n        [e.target.name]: value,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, expanded, onExpandButton, fields, preview } = this.props;\r\n    const { elements, addNew, element } = this.state;\r\n    if (preview) {\r\n      if (name === \"Personal Info\" && elements.length > 0) {\r\n        return (\r\n          <div className=\"previewHeader\">\r\n            <div className=\"previewTitle\">\r\n              {elements[0].name + \" \" + elements[0].lastname}\r\n            </div>\r\n            <div className=\"previewInfo\">\r\n              <div className=\"previewInfo2\">\r\n                <FontAwesomeIcon icon={faMailBulk} />\r\n                {elements[0].email}\r\n              </div>\r\n              <div className=\"previewInfo2\">\r\n                <FontAwesomeIcon icon={faPhone} />\r\n                {elements[0].number}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      } else if (name === \"Education\" && elements.length > 0) {\r\n        return (\r\n          <div className=\"previewSection\">\r\n            <div className=\"previewSectionTitle\">Education</div>\r\n            {elements.map((element) => {\r\n              return (\r\n                <div className=\"previewSectionInfo\">\r\n                  <div className=\"previewSectionData\">\r\n                    <div>{element.career}</div>\r\n                    <div>{element.institution}</div>\r\n                  </div>\r\n                  <div className=\"previewSectionDate\">\r\n                    {element.start} - {element.end}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      } else if (name === \"Experience\" && elements.length > 0) {\r\n        return (\r\n          <div className=\"previewSection\">\r\n            <div className=\"previewSectionTitle\">Experience</div>\r\n            {elements.map((element) => {\r\n              return (\r\n                <div className=\"previewSectionInfo\">\r\n                  <div className=\"previewSectionData\">\r\n                    <div>{element.position}</div>\r\n                    <div>{element.company}</div>\r\n                  </div>\r\n                  <div className=\"previewSectionDate\">\r\n                    {element.start} - {element.end}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      if (expanded) {\r\n        return (\r\n          <div id={id} className=\"sectionOpen\">\r\n            <div className=\"sectionTitle\">\r\n              <div>{name}</div>\r\n              <div>\r\n                <button\r\n                  onClick={(e) => onExpandButton(id, e)}\r\n                  className=\"circleBtn\"\r\n                >\r\n                  <FontAwesomeIcon icon={faChevronUp} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"sectionBody\">\r\n              <Elements\r\n                sectionName={name}\r\n                elements={elements}\r\n                onDeleteElement={this.onDeleteElement}\r\n                onEditElement={this.onEditElement}\r\n                onSubmitChanges={this.onSubmitChanges}\r\n                fields={fields}\r\n              />\r\n              {(() => {\r\n                if (addNew) {\r\n                  return (\r\n                    <form className=\"formElement\">\r\n                      {fields.map((field) => {\r\n                        if (field.name !== \"id\" && field.name !== \"onEdit\") {\r\n                          return (\r\n                            <div key={field.name}>\r\n                              <Field\r\n                                field={field}\r\n                                handleChange={this.handleChange}\r\n                                element={element}\r\n                                edit={false}\r\n                              />\r\n                            </div>\r\n                          );\r\n                        } else {\r\n                          return null;\r\n                        }\r\n                      })}\r\n                      <button\r\n                        onClick={this.onSubmitElement}\r\n                        className=\"onSubmitElement\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faCheck} />\r\n                        <div>Completed</div>\r\n                      </button>\r\n                    </form>\r\n                  );\r\n                } else {\r\n                  if (name === \"Personal Info\" && elements.length > 0) {\r\n                    return null;\r\n                  } else {\r\n                    return (\r\n                      <button\r\n                        onClick={this.onAddElement}\r\n                        className=\"onAddElement\"\r\n                      >\r\n                        <FontAwesomeIcon icon={faPlus} />\r\n                        <div>Add information</div>\r\n                      </button>\r\n                    );\r\n                  }\r\n                }\r\n              })()}\r\n            </div>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div id={id} className=\"sectionClose\">\r\n            <div>{name}</div>\r\n            <div>\r\n              {(() => {\r\n                if (elements.length > 0) {\r\n                  return (\r\n                    <button\r\n                      onClick={(e) => onExpandButton(id, e)}\r\n                      className=\"circleBtn\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faChevronDown} />\r\n                    </button>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <button\r\n                      onClick={(e) => onExpandButton(id, e)}\r\n                      className=\"circleBtn\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faPlus} />\r\n                    </button>\r\n                  );\r\n                }\r\n              })()}\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport default SectionInscription;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  faChevronDown,\r\n  faPlus,\r\n  faChevronUp,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass SectionDescription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      elements: [],\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { id, name, expanded, onExpandButton } = this.props;\r\n    const { elements } = this.state;\r\n    if (expanded) {\r\n      return (\r\n        <div id={id} className=\"sectionOpen\">\r\n          <div className=\"sectionTitle\">\r\n            <div>{name}</div>\r\n            <div>\r\n              <button\r\n                onClick={(e) => onExpandButton(id, e)}\r\n                className=\"circleBtn\"\r\n              >\r\n                <FontAwesomeIcon icon={faChevronUp} />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"sectionTitle\">\r\n            <div>{name}</div>\r\n          </div>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div id={id} className=\"sectionClose\">\r\n          <div>{name}</div>\r\n          <div>\r\n            {(() => {\r\n              if (elements.length > 0) {\r\n                return (\r\n                  <button\r\n                    onClick={(e) => onExpandButton(id, e)}\r\n                    className=\"circleBtn\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faChevronDown} />\r\n                  </button>\r\n                );\r\n              } else {\r\n                return (\r\n                  <button\r\n                    onClick={(e) => onExpandButton(id, e)}\r\n                    className=\"circleBtn\"\r\n                  >\r\n                    <FontAwesomeIcon icon={faPlus} />\r\n                  </button>\r\n                );\r\n              }\r\n            })()}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default SectionDescription;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport SectionInscription from \"./components/SectionInscription\";\nimport SectionDescription from \"./components/SectionDescription\";\nimport uniqid from \"uniqid\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      preview: false,\n      sections: [\n        {\n          id: uniqid(),\n          name: \"Personal Info\",\n          type: \"inscription\",\n          fields: [\n            { name: \"id\", type: \"id\" },\n            { name: \"onEdit\", type: \"boolean\" },\n            { name: \"name\", type: \"text\" },\n            { name: \"lastname\", type: \"text\" },\n            { name: \"email\", type: \"text\" },\n            { name: \"number\", type: \"text\" },\n            { name: \"address\", type: \"text\" },\n          ],\n          expanded: false,\n        },\n        {\n          id: uniqid(),\n          name: \"Education\",\n          type: \"inscription\",\n          fields: [\n            { name: \"id\", type: \"id\" },\n            { name: \"onEdit\", type: \"boolean\" },\n            { name: \"career\", type: \"text\" },\n            { name: \"institution\", type: \"text\" },\n            { name: \"start\", type: \"text\" },\n            { name: \"end\", type: \"text\" },\n          ],\n          expanded: false,\n        },\n        {\n          id: uniqid(),\n          name: \"Experience\",\n          type: \"inscription\",\n          fields: [\n            { name: \"id\", type: \"id\" },\n            { name: \"onEdit\", type: \"boolean\" },\n            { name: \"position\", type: \"text\" },\n            { name: \"company\", type: \"text\" },\n            { name: \"start\", type: \"text\" },\n            { name: \"end\", type: \"text\" },\n          ],\n          expanded: false,\n        },\n      ],\n    };\n    this.onExpandButton = this.onExpandButton.bind(this);\n  }\n\n  sectionByType = (section) => {\n    switch (section.type) {\n      case \"inscription\":\n        return (\n          <SectionInscription\n            id={section.id}\n            name={section.name}\n            expanded={section.expanded}\n            onExpandButton={this.onExpandButton}\n            fields={section.fields}\n            preview={this.state.preview}\n          />\n        );\n      case \"description\":\n        return (\n          <SectionDescription\n            id={section.id}\n            name={section.name}\n            expanded={section.expanded}\n            onExpandButton={this.onExpandButton}\n            fields={section.fields}\n            preview={this.state.preview}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  onExpandButton = (id) => {\n    const sectionsArrayCopy = [...this.state.sections];\n    for (let index = 0; index < sectionsArrayCopy.length; index++) {\n      const section = sectionsArrayCopy[index];\n      if (section.id === id) {\n        section.expanded = !section.expanded;\n      } else {\n        section.expanded = false;\n      }\n    }\n\n    this.setState({\n      sections: sectionsArrayCopy,\n    });\n  };\n\n  onPreviewButton = () => {\n    this.setState({\n      preview: !this.state.preview,\n    });\n  };\n\n  render() {\n    const { sections, preview } = this.state;\n    return (\n      <div className=\"container\">\n        {(() => {\n          if (preview) {\n            return (\n              <button\n                onClick={this.onPreviewButton}\n                className=\"onPreviewElement\"\n              >\n                <div>Edit</div>\n              </button>\n            );\n          } else {\n            return (\n              <button\n                onClick={this.onPreviewButton}\n                className=\"onPreviewElement\"\n              >\n                <div>Preview</div>\n              </button>\n            );\n          }\n        })()}\n        {sections.map((section) => {\n          return <div key={section.id}>{this.sectionByType(section)}</div>;\n        })}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}